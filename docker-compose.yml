services:
  api:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    environment:
      - MONGO_URL=mongodb://mongo:27017
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/logs
    depends_on:
      mongo:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
      args:
        - VITE_BACKEND_URL=http://localhost:8080
    ports:
      - "5173:80"
    depends_on:
      - api

  mongo:
    image: mongo:latest
    container_name: mongo-dedidr
    ports:
      - "27017:27017"
    volumes:
      - ./backend/data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  otelcol:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./backend/logs:/app/logs
      - ./config-files/otel-config.yaml:/etc/otelcol/otel-config.yaml
    command: ["--config=/etc/otelcol/otel-config.yaml"]

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./backend/config-files/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage: